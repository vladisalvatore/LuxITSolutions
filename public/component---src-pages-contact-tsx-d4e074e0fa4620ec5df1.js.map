{"version":3,"file":"component---src-pages-contact-tsx-d4e074e0fa4620ec5df1.js","mappings":"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","sources":["webpack://lux-it-solutions/./node_modules/emailjs-com/es/store/store.js","webpack://lux-it-solutions/./node_modules/emailjs-com/es/utils/validateParams.js","webpack://lux-it-solutions/./node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","webpack://lux-it-solutions/./node_modules/emailjs-com/es/api/sendPost.js","webpack://lux-it-solutions/./node_modules/emailjs-com/es/index.js","webpack://lux-it-solutions/./node_modules/emailjs-com/es/methods/send/send.js","webpack://lux-it-solutions/./src/pages/contact.tsx","webpack://lux-it-solutions/./src/components/Header.js","webpack://lux-it-solutions/./src/components/Layout.js"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import React, { useState } from 'react';\nimport emailjs from 'emailjs-com';\nimport Layout from '../components/Layout';\nimport '../styles/contact.css';\n\n\nconst AboutPage = () => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        message: '',\n      });\n    \n      const [status, setStatus] = useState('');\n    \n      const handleChange = (e) => {\n        setFormData({\n          ...formData,\n          [e.target.name]: e.target.value,\n        });\n      };\n    \n      const handleSubmit = (e) => {\n        e.preventDefault();\n    \n        emailjs\n          .send(\n            'service_34fy5qp', // Replace with your EmailJS service ID\n            'template_xanhlll', // Replace with your EmailJS template ID\n            formData,\n            '78H4WZ7RGIQWrWR7e' // Replace with your EmailJS user ID\n          )\n          .then(\n            (result) => {\n              setStatus('Message sent successfully!');\n              setFormData({ name: '', email: '', message: '' }); // Reset the form\n            },\n            (error) => {\n              setStatus('Failed to send message. Please try again.');\n            }\n          );\n      };\n  return (\n    <Layout>\n      {/* Hero Section */}\n      <section className=\"about-hero\">\n      <img\n          src=\"/icons/1120.gif\" // Replace with your actual GIF path\n          alt=\"Animated Header\"\n          className=\"about-hero-video\"\n        />\n        <h1 className=\"about-title\">Get In Touch</h1>\n      </section>\n\n      <section className=\"contact-form-section\">\n        <h2>Contact Us</h2>\n        <p>Have questions or need assistance? Fill out the form below or reach out to us directly.</p>\n        <form className=\"contact-form\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Your Name\"\n              value={formData.name}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Your Email\"\n              value={formData.email}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"message\">Message</label>\n            <textarea\n              id=\"message\"\n              name=\"message\"\n              rows=\"5\"\n              placeholder=\"Your Message\"\n              value={formData.message}\n              onChange={handleChange}\n              required\n            ></textarea>\n          </div>\n          <button type=\"submit\" className=\"form-button\">\n            Send Message\n          </button>\n        </form>\n        {status && <p className=\"form-status\">{status}</p>}\n      </section>\n\n      <footer className=\"contact-footer\">\n        <p>Email: contact@lux-it-solutions.com | Phone: 470-800-3101</p>\n      </footer>\n    </Layout>\n  );\n};\n\nexport default AboutPage;\n","// src/components/Header.js\nimport React from 'react'\nimport { Link } from 'gatsby'\nimport './header.css'\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <div className=\"logo\">\n        <Link to=\"/\">Lux IT Solutions</Link>\n      </div>\n      <nav className=\"nav\">\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/about\">About</Link>\n        <Link to=\"/contact\">Contact</Link>\n      </nav>\n    </header>\n  )\n}\n\nexport default Header\n","// src/components/Layout.js\n\nimport React from 'react'\nimport Header from './Header'\nimport './layout.css'\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <Header />\n      <main>{children}</main>\n      {/* Optionally, add a Footer component here */}\n    </>\n  )\n}\n\nexport default Layout\n"],"names":["store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","templatePrams","uID","_userID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","AboutPage","formData","setFormData","useState","name","email","message","setStatus","handleChange","e","value","React","Layout","className","src","alt","onSubmit","preventDefault","emailjs","then","result","error","htmlFor","type","id","placeholder","onChange","required","rows","Header","Link","to","_ref","children"],"sourceRoot":""}